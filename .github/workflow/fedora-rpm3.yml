name: Build

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/*.yml'
      - 'LICENSE.txt'
      - '*.md'
      - '*.sh'
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  CTEST_OUTPUT_ON_FAILURE: 1

jobs:
  archlinux:
    strategy:
      matrix:
        arch:
          [
            "linux/amd64 x86_64"
          ]
    name: "Archlinux ${{ matrix.arch }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      - name: Read info
        id: tags
        shell: bash
        run: |
          arch="${{ matrix.arch }}"
          echo ::set-output name=PLATFORM::${arch%% *}
          echo ::set-output name=ARCH::${arch##* }

      - name: Updating APT package database
        run: sudo apt -q update && sudo apt upgrade -y

      - name: Installing xmllint for ci-set-vars
        run: sudo apt -qy install libxml2-utils

      - name: Build ${{ matrix.arch }} release
        shell: bash
        run: |
          docker buildx build --platform ${{ steps.tags.outputs.PLATFORM }} \
          --tag contour:${{ steps.tags.outputs.ARCH }} \
          -f .github/archlinux/Dockerfile \
          --load \
          .
          docker create --name contour-${{ steps.tags.outputs.ARCH }} contour:${{ steps.tags.outputs.ARCH }}
          docker cp contour-${{ steps.tags.outputs.ARCH }}:/app/contour.pkg.tar.zst contour-${{ steps.tags.outputs.ARCH }}.pkg.tar.zst
          docker container rm contour-${{ steps.tags.outputs.ARCH }}
      - name: "Uploading Archlinux .pkg.tar.zst package"
        uses: actions/upload-artifact@v2
        with:
          name: "contour-${{ steps.set_vars.outputs.VERSION_STRING }}-archlinux_${{ steps.tags.outputs.ARCH }}"
          path: "contour-${{ steps.tags.outputs.ARCH }}.pkg.tar.zst"
          if-no-files-found: error
          retention-days: 7

  fedora:
    strategy:
      matrix:
        os_version: [36, 37, rawhide]
        arch:
          [
            "linux/amd64 x86_64"
          ]
    name: "Fedora ${{ matrix.os_version }} ${{ matrix.arch }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      - name: Read matrix info
        id: tags
        shell: bash
        run: |
          arch="${{ matrix.arch }}"
          echo ::set-output name=PLATFORM::${arch%% *}
          echo ::set-output name=ARCH::${arch##* }
      - name: Updating APT package database
        run: sudo apt -q update && sudo apt upgrade -y
      - name: Installing xmllint for ci-set-vars
        run: sudo apt -qy install libxml2-utils
      - name: set environment variables
        id: set_vars
        run: ./scripts/ci-set-vars.sh
        env:
          REPOSITORY: ${{ github.event.repository.name }}
      - name: Fetch and unpack embeds
        run: ./scripts/install-deps.sh
        env:
          PREPARE_ONLY_EMBEDS: 'ON'
          SYSDEP_ASSUME_YES: 'ON'
          OS_OVERRIDE: 'fedora'
      - name: "Post-fix embedded dependency permissions."
        run: sudo find _deps/sources -exec chown $UID {} \;
      - name: prepare distfile
        run: |
          set -x
          PKGNAME="contour-${{ steps.set_vars.outputs.VERSION }}"
          DISTDIR="/tmp/dist/${PKGNAME}"
          mkdir -p ${DISTDIR}
          cp -rvp . ${DISTDIR}
          tar czpf ${PKGNAME}.tar.gz -C "/tmp/dist" .
      - name: Build ${{ matrix.arch }} release
        shell: bash
        run: |
          set -x
          ARCH="${{ steps.tags.outputs.ARCH }}"
          VERSION="${{ steps.set_vars.outputs.VERSION }}"
          OS_VERSION="${{ matrix.os_version }}"
          sed -i -e "s/fedora:35/fedora:${{ matrix.os_version }}/" .github/fedora/Dockerfile
          docker buildx build --platform ${{ steps.tags.outputs.PLATFORM }} \
                  --tag contour:${ARCH} \
                  --build-arg VERSION=${VERSION} \
                  --build-arg VERSION_STRING=${VERSION} \
                  -f .github/fedora/Dockerfile \
                  --load \
                  .
          docker create --name contour-${ARCH} contour:${ARCH}
          docker cp contour-${ARCH}:/app/rpmbuild/RPMS/${ARCH}/contour-${VERSION}-1.fc${OS_VERSION}.${ARCH}.rpm \
                    contour-${VERSION}-1.fc${OS_VERSION}.${ARCH}.rpm
          docker cp contour-${ARCH}:/app/rpmbuild/RPMS/${ARCH}/contour-debuginfo-${VERSION}-1.fc${OS_VERSION}.${ARCH}.rpm \
                    contour-debuginfo-${VERSION}-1.fc${OS_VERSION}.${ARCH}.rpm
          docker cp contour-${ARCH}:/app/rpmbuild/RPMS/${ARCH}/contour-debugsource-${VERSION}-1.fc${OS_VERSION}.${ARCH}.rpm \
                    contour-debugsource-${VERSION}-1.fc${OS_VERSION}.${ARCH}.rpm
          docker container rm contour-${{ steps.tags.outputs.ARCH }}
          echo "pwd: `pwd`" && ls -hla
      - name: "Uploading Fedora RPM package"
        uses: actions/upload-artifact@v2
        with:
          name: "contour-${{ steps.set_vars.outputs.VERSION }}-1.fc${{ matrix.os_version }}.${{ steps.tags.outputs.ARCH }}.rpm"
          path: "contour-${{ steps.set_vars.outputs.VERSION }}-1.fc${{ matrix.os_version }}.${{ steps.tags.outputs.ARCH }}.rpm"
          if-no-files-found: error
          retention-days: 7
      - name: "Uploading Fedora RPM package (debuginfo)"
        uses: actions/upload-artifact@v2
        with:
          name: "contour-debuginfo-${{ steps.set_vars.outputs.VERSION }}-1.fc${{ matrix.os_version }}.${{ steps.tags.outputs.ARCH }}.rpm"
          path: "contour-debuginfo-${{ steps.set_vars.outputs.VERSION }}-1.fc${{ matrix.os_version }}.${{ steps.tags.outputs.ARCH }}.rpm"
          if-no-files-found: error
          retention-days: 7
      - name: "Uploading Fedora RPM package (debugsource)"
        uses: actions/upload-artifact@v2
        with:
          name: "contour-debugsource-${{ steps.set_vars.outputs.VERSION }}-1.fc${{ matrix.os_version }}.${{ steps.tags.outputs.ARCH }}.rpm"
          path: "contour-debugsource-${{ steps.set_vars.outputs.VERSION }}-1.fc${{ matrix.os_version }}.${{ steps.tags.outputs.ARCH }}.rpm"
          if-no-files-found: error
          retention-days: 7
